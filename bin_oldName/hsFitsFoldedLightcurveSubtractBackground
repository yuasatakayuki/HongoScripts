#!/usr/bin/env ruby

#Takayuki Yuasa 20140513

if(ARGV.length<4)then
	puts <<EOS
wsFitsLightcurveSubtractBackground 
    (1: spin folded light curve QDP of source)
    (2: BACKSCAL of source) 
    (3: spin folded light curve QDP of background)
    (4: BACKSCAL of background)
EOS
	exit
end

#---------------------------------------------
# parameter
#---------------------------------------------
qdpSource=ARGV[0]
backscaleSource=ARGV[1].to_f
qdpBGD=ARGV[2]
backscaleBGD=ARGV[3].to_f

#---------------------------------------------
# parameter check
#---------------------------------------------

for file in [qdpSource, qdpBGD] do
if(!File.exist?(file))then
	puts "Error: #{file} not found..."
	exit
end
end

#---------------------------------------------
# main
#---------------------------------------------

#read qdp files
src=[]
bgd=[]
open(qdpSource).each(){|line|
	src << line
}
open(qdpBGD).each(){|line|
	bgd << line
}

header=src[0...3]
src=src[3...(src.length)]
bgd=bgd[3...(bgd.length)]


puts header.join("")

for i in 0...(src.length) do
	srcArray=src[i].split(" ")
	bgdArray=bgd[i].split(" ")
	
	xSrc=srcArray[0].to_f
	xErrorSrc=srcArray[1].to_f
	ySrc=srcArray[2].to_f
	yErrorSrc=srcArray[3].to_f
	
	xBGD=bgdArray[0].to_f
	xErrorBGD=bgdArray[1].to_f
	yBGD=bgdArray[2].to_f
	yErrorBGD=bgdArray[3].to_f
	
	#check x-bin definition
	if(xSrc!=xBGD or xErrorSrc!=xErrorBGD)then
		puts "Error: source and background have different x bin definitions..."
		exit
	end
	
	newY= ySrc - (yBGD * (backscaleSource/backscaleBGD))
	newYError= Math.sqrt( yErrorSrc*yErrorSrc + (yErrorBGD * (backscaleSource/backscaleBGD)*(yErrorBGD * (backscaleSource/backscaleBGD))) )
	
	puts <<EOS
#{"%5.4e"%xSrc} #{"%5.4e"%xErrorSrc} #{"%5.4e"%newY} #{"%5.4e"%newYError} 1
EOS
	
end
