#!/usr/bin/env ruby

if(ARGV.length==0)then
	puts <<EOS
Provide:
	1: an Xspec log file containing equivalent width calculation
	2: model component number of which equivalent width is retrieved from the log file
	3: (optional) format string e.g. "%5.2f"
EOS
	exit
end

logFile=ARGV[0]
nComponentARG=ARGV[1]
formatString="%4.3f"
if(ARGV[2]!=nil)then
	formatString=ARGV[2]
end

eqwEntries={}
nComponent=0

insideEqwEntry=false
open(logFile).each(){|line|
	if(insideEqwEntry and line.include?("XSPEC") and line.include?("> "))then
		insideEqwEntry=false
	end

	if(!insideEqwEntry)then
		if(line.include?("XSPEC") and line.include?("> ") and line.include?("eqw"))then
			insideEqwEntry=true
			nComponent=line.split(" ")[2]
			eqwEntries[nComponent]={}
			next
		end
	end

	if(insideEqwEntry)then
		if(line.include?("Additive group equiv width"))then
			eqwEntries[nComponent]["eqw"]=line.split(" ")[-2].to_f*1000
		end

		if(line.include?("Equiv width error range"))then
			eqwEntries[nComponent]["eqwMin"]=line.split(" ")[-4].to_f*1000
			eqwEntries[nComponent]["eqwMax"]=line.split(" ")[-2].to_f*1000
		end
	end

}

if(eqwEntries[nComponentARG]!=nil)then
	puts <<EOS
#{formatString%eqwEntries[nComponentARG]["eqw"]} ( #{formatString%eqwEntries[nComponentARG]["eqwMin"]} - #{formatString%eqwEntries[nComponentARG]["eqwMax"]} )
EOS
else
	STDERR.puts "Error: equivalent width for model component #{nComponentARG} is not found"
	STDERR.puts "Message: equivalent width results found in the log are:"
	STDERR.puts eqwEntries
	exit
end
